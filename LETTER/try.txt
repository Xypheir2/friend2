<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>New Letter!</title>

    <!-- Tab color -->
    <meta name="theme-color" content="#6c5ce7"> 

    <!-- Logo -->
    <link rel="icon" href="images/cat.png" type="image/png">
    <link rel="stylesheet" href="./style.css">
</head>
<body>
    <div class="container">
        <!-- Notification div -->
        <div id="notification" class="notification">
            🔔 You Received a new letter!
        </div>
        
        <div class="envelope-wrapper">
            <div class="envelope">
                <div class="letter">
                    <div class="text">
                        <!-- Letter content -->
                        <p><strong>Dear Rey,</strong></p>
                        <p>
                            I wanted to send you a little something I made before the year ends, and I truly hope it brings a smile to your face. 
                            I’ve been reflecting, and I wanted to take a moment to express just how grateful I am.
                        </p>
                        <p>
                            We’ve been through so much together, and your presence in my life has been a constant source of strength and comfort. You've always been there for me, even when I’ve been withdrawn. You've listened without judgment, made me laugh when I needed it the most, and been my rock during my toughest days. I honestly don’t know what I would’ve done without you. You’ve given me comfort and support that I can never fully put into words.
                        </p>
                        <p>
                            I know you have your own struggles, too, and I’m sorry for not always being the friend you needed in return. I want you to know, though, that I see you. I see the battles you face, and I’m here for you, just like you’ve always been here for me. You don’t have to go through things alone—I’ll always be by your side, no matter what. 
                        </p>
                        <p>
                            There’s a song that’s been on my mind lately. No actually it's my favorite song, “Little Runaway” by Benson Boone. The lyrics speak to me in a way that I feel I need to share with you:
                        </p>
                        <blockquote>
                            "Little runaway, the world’s never easy<br>
                            You’re so good at being down on yourself<br>
                            And the fog makes it harder to see me<br>
                            You don’t know where to reach out for help."
                        </blockquote>
                        <p>
                            I know that life can sometimes feel like an endless struggle, and it’s easy to get lost in the confusion and pain. But I want you to know, whenever you feel like you’re running away from everything, I’m here. I’m here to help you find your way, to be the light in the fog, and to remind you that you're never alone. 
                        </p>
                        <blockquote>
                            "Won’t you come and we can stare at the stars<br>
                            And look at the comets from the roof of my car<br>
                            Little runaway, I know it’s been hard<br>
                            You’re trying your best but you keep falling apart<br>
                            Lay your problems right here, let them all disappear."
                        </blockquote>
                        <p>
                            No matter how many times you feel like you're falling apart, I’ll always be here for you, ready to listen, ready to help you put things back together. I want you to always feel safe with me, to share your heart and your worries, just like you did to me. Because you deserve all the love and care this world has to offer.
                        </p>
                        <p>
                            Another song that’s been on my mind lately is “Youtiful” by Stray Kids. The title itself says it all—“You” and “Beautiful” combined. It’s a reminder that no matter what happens, you are beautiful, inside and out.
                        </p>
                        <blockquote>
                            "You know whenever there's a chance<br>
                            I'll tell you that you're amazing as you are<br>
                            'Cause when you give me a glance<br>
                            I'm sure that I see the universe in your eyes<br>
                            Don’t you ever tell yourself that you’re not enough<br>
                            I am certain that you're truly fine<br>
                            You are a miracle, miracle<br>
                            You are youtiful."
                        </blockquote>
                        <p>
                            I want to encourage you to love yourself the way you deserve. You are more than enough, just as you are. You are a miracle, and your worth cannot be measured by anything other than the incredible person you are. Don't change yourself for others, change yourself for you.
                        </p>
                        <p>
                            As we move into the new year, I hope we continue being friends. I promise that I’ll do better, be more present, and stop pushing others away. Thank you for being such a meaningful part of my life. I look forward to more laughs, more memories, and more support from each other in the days ahead. Thank you!
                        </p>
                        <p>With all my heart,</p>
                        <p><strong>Ness</strong></p>
                        <div class="friend-request-container" style="display: none;">
                            <p>Continue being my friend?</p>
                            <button id="yes-btn">Yes</button>
                            <button id="no-btn">No</button>
                        </div>
                           <!-- Spotify -->
                        <div class="spotify-code">
                            <img src="images/spotify.png" alt="Spotify QR Code">
                        </div>
                    </div>
                </div>
            </div>
            <div class="envelope-shadow"></div>
            <div class="circle"></div>
        </div>

        <!-- Q&A Section -->
        <div class="qa-container" style="display: none;">
            <div id="question" class="qa-question">
                Do you want to be friends?
            </div>
            <button id="yes-btn-qa" class="qa-btn">Yes</button>
            <button id="no-btn-qa" class="qa-btn">No</button>
        </div>
    </div>
    
    <script>
window.onload = function() {
    const notification = document.getElementById('notification');
    setTimeout(() => {
        notification.style.display = 'none';
    }, 4000); // Hide after 4 seconds
};

const circle = document.querySelector('.circle');
const letter = document.querySelector('.letter');

// Open the letter when the circle is clicked
circle.addEventListener('click', function () {
    letter.classList.add('show');
});

const envelopeWrapper = document.querySelector('.envelope-wrapper');
envelopeWrapper.addEventListener('click', () => {
    envelopeWrapper.classList.toggle('flap');
});

// Q&A logic
let questionContainer = document.getElementById('question');
let yesBtn = document.getElementById('yes-btn-qa');
let noBtn = document.getElementById('no-btn-qa');

// Show the Q&A section only when the letter is scrolled to the bottom
let letterElement = document.querySelector('.letter');
letterElement.addEventListener('scroll', function() {
    if (letterElement.scrollHeight - letterElement.scrollTop === letterElement.clientHeight) {
        document.querySelector('.qa-container').style.display = 'block';
    }
});
// "Yes" button
yesBtn.addEventListener('click', function() {
    questionContainer.textContent = "HOORAY! Membership Extended!";
    yesBtn.style.display = 'none';
    noBtn.style.display = 'none';

    // Fireworks GIF
    document.getElementById('yes-gif').style.display = 'block';
    document.getElementById('no-gif').style.display = 'none';
    document.getElementById('gif-container').style.display = 'block';
    document.body.style.transition = 'background-image 1s ease-in-out';
    document.body.style.backgroundImage = 'url("gif/fireworks.gif")';
    document.body.style.backgroundSize = 'cover';

    // dark overlay
    let overlay = document.createElement('div');
    overlay.id = 'dark-overlay';
    overlay.style.position = 'absolute';
    overlay.style.top = '0';
    overlay.style.left = '0';
    overlay.style.width = '100%';
    overlay.style.height = '100%';
    overlay.style.backgroundColor = 'rgba(0, 0, 0, 0.5)'; // Semi-transparent dark overlay
    overlay.style.zIndex = '999'; // Ensure it's on top
    overlay.style.transition = 'opacity 1s ease-in-out';
    document.body.appendChild(overlay);

    // above the overlay
    document.querySelector('.letter').style.zIndex = '1000';
    document.querySelector('.qa-container').style.zIndex = '1000';
    document.querySelector('.container').style.zIndex = '1000';

    // transition
    setTimeout(function() {
        document.body.style.transition = 'background-image 1s ease-in-out';
        document.body.style.backgroundImage = '';
        overlay.style.opacity = '0';
        setTimeout(() => overlay.remove(), 1000);
    }, 10000); //10sec
});

// "No" button
noBtn.addEventListener('click', function () {
    const container = document.querySelector('.qa-container');
    const containerRect = container.getBoundingClientRect();
    const offsetX = Math.random() > 0.5 ? 150 : -150;
    const offsetY = Math.random() > 0.5 ? 100 : -100;
    noBtn.style.transition = 'transform 0.5s ease';
    noBtn.style.transform = `translate(${offsetX}px, ${offsetY}px)`;

    // GIF
    document.getElementById('no-gif').style.display = 'block';
    document.getElementById('yes-gif').style.display = 'none';
    document.getElementById('gif-container').style.display = 'block';
});

    </script>
</body>
</html>




:root {
    --primary: #fefefe;
    --bg-color: #dfe6e9;
    --bg-envelope-color: #f4f6f7;
    --envelope-tab: #6c5ce7;
    --envelope-cover: #a29bfe;
    --shadow-color: rgba(0, 0, 0, 0.1);
    --txt-color: #2d3436;
    --circle-color: #e74c3c;
    --circle-hover-color: #ff6f61;
}

body {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    background: var(--bg-color);
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100vh;
    font-family: 'Georgia', serif; /* font */
}

.container {
    display: grid;
    place-items: center;
}

.envelope-wrapper {
    background: var(--bg-envelope-color);
    box-shadow: 0 4px 30px rgba(0, 0, 0, 0.15);
    position: relative;
    border-radius: 15px; /* Rounded edges */
    transition: transform 0.5s ease-in-out;
    cursor: pointer;
    transform: translateY(0); /* Starting position */
    animation: float 3s ease-in-out infinite; /* Floating animation */
}

.envelope {
    position: relative;
    width: 320px;
    height: 250px;
    border-radius: 15px;
    transition: transform 0.5s ease-in-out;
}

.envelope::before {
    content: '';
    position: absolute;
    z-index: 2;
    border-top: 140px solid var(--envelope-tab);
    border-right: 160px solid transparent;
    border-left: 160px solid transparent;
    top: 0;
    transform-origin: top;
    transition: all 0.5s ease-in-out 0.7s;
    border-radius: 15px 15px 0 0; /* Rounded top corners */
}

.envelope::after {
    content: '';
    position: absolute;
    z-index: 2;
    border-top: 140px solid transparent;
    border-left: 160px solid var(--envelope-cover);
    border-right: 160px solid var(--envelope-cover);
    border-bottom: 110px solid var(--envelope-cover);
    bottom: 0;
    border-radius: 0 0 15px 15px; /* Rounded bottom corners */
}

.envelope-shadow {
    position: absolute;
    bottom: -120px;
    left: 50%;
    transform: translateX(-50%);
    width: 260px;
    height: 50px;
    background: rgba(0, 0, 0, 0.3);
    border-radius: 50%;
    box-shadow: 0 4px 30px rgba(0, 0, 0, 0.15);
    opacity: 0.5;
    z-index: 0;
}

/* Ensure letter is hidden initially */
.letter {
    position: absolute;
    z-index: 1;
    right: 10%;
    bottom: 0;
    width: 70%;
    height: 80%;
    background: var(--primary);
    padding: 20px 15px;
    box-shadow: 0 0 12px var(--shadow-color);
    transform: scale(0.8);
    opacity: 0;
    transition: all 0.7s ease-in-out;
    border-radius: 10px;
    overflow-y: scroll;
}

/* Show the letter when class 'show' is added */
.letter.show {
    opacity: 1;
    transform: scale(1);
}


.letter:hover {
    overflow-y: scroll;
}

.letter::-webkit-scrollbar {
    width: 8px;
}

.letter::-webkit-scrollbar-thumb {
    background-color: var(--circle-color);
    border-radius: 4px;
}

.letter::-webkit-scrollbar-track {
    background: transparent;
}

.letter > .text {
    font-size: 13px;
    color: var(--txt-color);
    text-align: left;
    line-height: 1.25;
    font-family: 'Georgia', serif; /* font */
}

.circle {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 60px;
    height: 60px;
    background: var(--circle-color);
    z-index: 4;
    transform: translate(-50%, -50%) rotate(45deg);
    transition: transform 0.5s ease-in-out, background-color 0.3s ease, box-shadow 0.3s ease;
    box-shadow: 0 0 20px var(--circle-color);
    cursor: pointer;
    border-radius: 50%;
    animation: pulse 1.5s infinite;
}

.circle:hover {
    background-color: var(--circle-hover-color);
    box-shadow: 0 0 25px var(--circle-hover-color);
}

.circle:active {
    z-index: 0; 
    opacity: 0; 
}

@keyframes pulse {
    0% {
        transform: translate(-50%, -50%) scale(1);
        box-shadow: 0 0 20px var(--circle-color);
    }
    50% {
        transform: translate(-50%, -50%) scale(1.1);
        box-shadow: 0 0 30px var(--circle-color);
    }
    100% {
        transform: translate(-50%, -50%) scale(1);
        box-shadow: 0 0 20px var(--circle-color);
    }
}

@keyframes float {
    0% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-10px);
    }
    100% {
        transform: translateY(0);
    }
}

.flap .envelope::before {
    z-index: 0;
    transform: rotateX(180deg);
}

.flap .envelope .letter {
    z-index: 3;
    bottom: 110px;
    transform: scale(1.2);
    opacity: 1;
    transition-delay: 0.9s;
}

.flap .circle {
    opacity: 0;
    visibility: hidden;
    transform: rotate(90deg);
    transition: opacity 0.5s ease, visibility 0.5s ease, transform 0.5s ease;
}

.circle:active {
    z-index: 0; 
    opacity: 0; 
    visibility: hidden; 
    transform: scale(0.8) rotate(90deg); 
    transition: opacity 0.5s ease, visibility 0.5s ease, transform 0.5s ease;
}
.spotify-code {
    text-align: center;
    margin-top: 20px;
}

.spotify-code img {
    width: 100px; 
    height: 100px;
    object-fit: cover;
    border-radius: 10px;
}
.notification {
    position: fixed;
    top: 10px;
    left: 50%;
    transform: translateX(-50%);
    background-color: #ffeb3b;
    color: #333;
    padding: 10px 20px;
    border-radius: 5px;
    font-size: 16px;
    font-weight: bold;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
    z-index: 10;
    display: block;
    animation: slideIn 0.5s ease-out;
}

@keyframes slideIn {
    from {
        top: -50px;
        opacity: 0;
    }
    to {
        top: 10px;
        opacity: 1;
    }
}
/* Additional styles for the interactive question */
    /* Styles for Q&A */
    .qa-container {
        position: absolute;
        top: 50%;
        left: 70%; /* Position it beside the envelope */
        transform: translateY(-50%);
        background-color: #fff;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        font-family: 'Arial', sans-serif;
        text-align: center;
        width: 200px;
        display: none; /* Initially hidden */
    }

    .qa-question {
        font-size: 18px;
        margin-bottom: 10px;
    }

    .qa-btn {
        background-color: #6c5ce7;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        margin: 5px;
    }

    .qa-btn:hover {
        background-color: #5a47c3;
    }

    .qa-btn:active {
        background-color: #3d2c91;
    }
    #gif-container {
        display: none;
        text-align: center;
        position: relative;
        top: -10px;
        left: 380px;
        transform: translate(-50%, -50%);
        background-color: rgba(0, 0, 0, 0.1);
        border-radius: 10px;
        padding: 10px;
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2);
    }
    
    /* Style for the GIFs */
    #gif-container img {
        display: inline-block;
        width: 150px;
        height: auto;
        border-radius: 5px;
        animation: bounce 1.5s infinite ease-in-out;
    }
    
    /* Bounce Animation */
    @keyframes bounce {
        0%, 100% {
            transform: translateY(0);
        }
        50% {
            transform: translateY(-10px);
        }
    }
    
    
    
    
    